{"version":3,"sources":["Components/Expenses/ExampleList.js","Components/UI/ExpenseCard.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesContentList.js","Components/Expenses/ExpensesFilter.js","Components/chart/ChartBar.js","Components/chart/Chart.js","Components/Expenses/ChartData.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["exampleList","id","title","amount","date","Date","ExpenseCard","className","children","classes","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesContentList","props","filteredItems","length","map","element","ExpensesFilter","value","selected","onChange","event","console","log","target","onChangeSelectedYear","ChartBar","fillHeight","maxValue","Math","round","style","height","label","Chart","dataValues","data","totalMax","max","ChartData","dataForChart","expense","getMonth","Expenses","items","useState","selectedYear","setSelectedYear","filteredExpenses","filter","toString","selectedYearFromFilter","ExpenseForm","selectedTitle","setSelectedTitle","selectedAmount","setSelectedAmount","selectedDate","setSelectedDate","action","onSubmit","preventDefault","expenseDataFromForm","onSaveExpenseData","htmlFor","type","min","step","onClick","onHideFormHandler","NewExpense","btnClick","setBtnClick","CopyExpenseDataFromForm","expenseDataFromNewExpense","random","onAddExpenseData","App","expensesList","setExpenceList","previousExpense","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wZAAaA,G,MAAc,CACzB,CACEC,GAAI,KACJC,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEJ,GAAI,KACJC,MAAO,SACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEJ,GAAI,KACJC,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEJ,GAAI,KACJC,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,O,iCCdbC,EAPK,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACvBC,EAAO,qBAAiBF,GAC9B,OACI,qBAAKA,UAAWE,EAAhB,SAA0BD,KCcnBE,EAfK,SAAC,GAAc,IAAZN,EAAW,EAAXA,KAEfO,EAAQP,EAAKQ,eAAe,QAAS,CAAED,MAAO,SAC9CE,EAAMT,EAAKQ,eAAe,QAAS,CAAEC,IAAK,YAC1CC,EAAOV,EAAKW,cAElB,OACE,eAAC,EAAD,CAAaR,UAAU,eAAvB,UACE,qBAAKA,UAAU,sBAAf,SAAsCI,IACtC,qBAAKJ,UAAU,qBAAf,SAAqCO,IACrC,qBAAKP,UAAU,oBAAf,SAAoCM,QCa3BG,EArBK,SAAC,GAA6B,IAA3Bd,EAA0B,EAA1BA,MAAOE,EAAmB,EAAnBA,KAAMD,EAAa,EAAbA,OAOlC,OACE,6BACE,eAAC,EAAD,CAAaI,UAAU,eAAvB,UACE,cAAC,EAAD,CAAaH,KAAMA,IACnB,0BAASG,UAAU,4BAAnB,UACE,6BAAKL,IACL,oBAAGK,UAAU,sBAAb,cAAqCJ,cCQhCc,G,MAtBa,SAACC,GAE3B,OAAmC,IAA/BA,EAAMC,cAAcC,OAEpB,oBAAIb,UAAU,0BAAd,uCAKF,oBAAIA,UAAU,gBAAd,SACGW,EAAMC,cAAcE,KAAI,SAACC,GAAD,OACvB,cAAC,EAAD,CAEEpB,MAAOoB,EAAQpB,MACfE,KAAMkB,EAAQlB,KACdD,OAAQmB,EAAQnB,QAHXmB,EAAQrB,WCSRsB,G,MAtBQ,SAACL,GAOtB,OACE,qBAAKX,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQiB,MAAON,EAAMO,SAAUC,SATX,SAACC,GACzBC,QAAQC,IAAR,kBAAuBF,EAAMG,OAAON,QACpCN,EAAMa,qBAAqBJ,EAAMG,OAAON,QAOpC,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,OCIKQ,G,YAlBE,SAACd,GAEd,IAAIe,EAAa,KAMnB,OAJMf,EAAMgB,SAAW,IACjBD,EAAU,UAAME,KAAKC,MAAOlB,EAAMM,MAAMN,EAAMgB,SAAU,KAA9C,MAId,sBAAK3B,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAkB8B,MAAO,CAACC,OAAQL,OAEnD,qBAAK1B,UAAU,mBAAf,SAAmCW,EAAMqB,aCKhCC,EAlBD,SAACtB,GACb,IAAMuB,EAAavB,EAAMwB,KAAKrB,KAAI,SAACC,GAAD,OAAaA,EAAQE,SACjDmB,EAAWR,KAAKS,IAAL,MAAAT,KAAI,YAAQM,IAE7B,OACE,qBAAKlC,UAAU,QAAf,SACGW,EAAMwB,KAAKrB,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAEEE,MAAOF,EAAQE,MACfU,SAAUS,EACVJ,MAAOjB,EAAQiB,OAHVjB,EAAQiB,aCmDRM,EA5DG,SAAC3B,GACjB,IAD2B,EACrB4B,EAAe,CACnB,CACEP,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,OACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,GAET,CACEe,MAAO,MACPf,MAAO,IAhDgB,cAoDLN,EAAMC,eApDD,IAoD3B,2BAA2C,CAAC,IAAjC4B,EAAgC,QAEzCD,EADqBC,EAAQ3C,KAAK4C,YACPxB,OAASuB,EAAQ5C,QAtDnB,8BAyD3B,OAAO,cAAC,EAAD,CAAOuC,KAAMI,KC3BPG,EA1BE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,EAAwCC,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAOMC,EAAmBJ,EAAMK,QAAO,SAACjC,GACrC,OAAOA,EAAQlB,KAAKW,cAAcyC,aAAeJ,KAGnD,OACE,8BACE,eAAC,EAAD,CAAa7C,UAAU,WAAvB,UACE,cAAC,EAAD,CAAWY,cAAemC,IAC1B,cAAC,EAAD,CACE7B,SAAU2B,EACVrB,qBAf0B,SAAC0B,GACjC7B,QAAQC,IAAR,oBAAyB4B,IACzBJ,EAAgBI,MAeZ,cAAC,EAAD,CAAqBtC,cAAemC,U,OC4C7BI,G,YApEK,SAACxC,GACnB,MAA0CiC,mBAAS,IAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAA4CT,mBAAS,IAArD,mBAAOU,EAAP,KAAuBC,EAAvB,KACA,EAAwCX,mBAAS,IAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KAwBA,OACE,sBAAMC,OAAO,GAAGC,SAdK,SAACvC,GACtBA,EAAMwC,iBACN,IAAMC,EAAsB,CAC1BlE,MAAOyD,EACPxD,QAAS0D,EACTzD,KAAM,IAAIC,KAAK0D,IAEjB7C,EAAMmD,kBAAkBD,GACxBR,EAAiB,IACjBE,EAAkB,IAClBE,EAAgB,KAIhB,SACE,0BAASzD,UAAU,wBAAnB,UACE,sBAAKA,UAAU,uBAAf,UACE,uBAAO+D,QAAQ,GAAf,mBACA,uBACEC,KAAK,OACL/C,MAAOmC,EACPjC,SA9BiB,SAACC,GAC1BiC,EAAiBjC,EAAMG,OAAON,aAgC1B,sBAAKjB,UAAU,uBAAf,UACE,uBAAO+D,QAAQ,GAAf,oBACA,uBACEC,KAAK,SACLC,IAAI,OACJC,KAAK,OACLjD,MAAOqC,EACPnC,SArCkB,SAACC,GAC3BmC,EAAkBnC,EAAMG,OAAON,aAuC3B,sBAAKjB,UAAU,uBAAf,UACE,uBAAO+D,QAAQ,GAAf,kBACA,uBACEC,KAAK,OACLC,IAAI,aACJ5B,IAAI,aACJpB,MAAOuC,EACPrC,SA5CgB,SAACC,GACzBqC,EAAgBrC,EAAMG,OAAON,aA8CzB,sBAAKjB,UAAU,uBAAf,UACE,wBAAQgE,KAAK,UAAb,6BACA,wBAAQA,KAAK,SAASG,QAASxD,EAAMyD,kBAArC,8BCzBKC,EAlCI,SAAC1D,GAClB,MAAgCiC,oBAAS,GAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KAmBA,OAAID,EAEA,qBAAKtE,UAAU,cAAf,SACE,cAAC,EAAD,CAAa8D,kBApBY,SAACU,GAC9B,IAAMC,EAAyB,2BAC1BD,GAD0B,IAE7B9E,GAAIkC,KAAK8C,SAASzB,aAEpBtC,EAAMgE,iBAAiBF,GACvBF,GAAY,IAcgDH,kBAPtC,WACrBG,GAAY,QAWb,qBAAKvE,UAAU,cAAf,SACE,wBAAQmE,QAjBY,WACtBI,GAAY,IAgBV,gCCTSK,MAnBf,WACE,MAAuChC,mBAASnD,GAAhD,mBAAOoF,EAAP,KAAqBC,EAArB,KASA,OACE,sBAAK9E,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAY2E,iBAVc,SAACF,GAC7BpD,QAAQC,IAAImD,GACZK,GAAe,SAACC,GACd,MAAM,CAAEN,GAAR,mBAAsCM,UAQtC,cAAC,EAAD,CAAUpC,MAAOkC,QCRRG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fea44763.chunk.js","sourcesContent":["export const exampleList = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n","import \"./ExpenseCard.css\";\n\nconst ExpenseCard = ({className, children}) => {\n    const classes = `card-style ${className}`;\n    return (\n        <div className={classes}>{children}</div>\n    )\n}\n\nexport default ExpenseCard;","import React from \"react\";\nimport \"./ExpenseDate.css\";\nimport ExpenseCard from \"../UI/ExpenseCard\";\n\nconst ExpenseDate = ({ date }) => {\n\n  const month = date.toLocaleString(\"pl-PL\", { month: \"long\" });\n  const day = date.toLocaleString(\"pl-PL\", { day: \"2-digit\" });\n  const year = date.getFullYear();\n\n  return (\n    <ExpenseCard className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div> \n    </ExpenseCard>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport ExpenseCard from \"../UI/ExpenseCard\";\n\nconst ExpenseItem = ({ title, date, amount }) => {\n  // const [text, setText] = useState(title);\n\n  // const clickHandler = () => {\n  //   setText(\"update\");\n  // };\n\n  return (\n    <li>\n      <ExpenseCard className=\"expense-item\">\n        <ExpenseDate date={date} />\n        <section className=\"expense-item__description\">\n          <h2>{title}</h2>\n          <p className=\"expense-item__price\">${amount}</p>\n          {/* <button onClick={clickHandler}>Click me</button> */}\n        </section>\n      </ExpenseCard>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesContentList.css\";\n\nconst ExpensesContentList = (props) => {\n  // condition for empty list of expenses\n  if (props.filteredItems.length === 0) {\n    return (\n      <h2 className=\"expenses-list__fallback\">No expenses for this year</h2>\n    );\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.filteredItems.map((element) => (\n        <ExpenseItem\n          key={element.id}\n          title={element.title}\n          date={element.date}\n          amount={element.amount}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesContentList;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n\n  const yearChangeHandler = (event) => {\n    console.log(`filter: ${event.target.value}`);\n    props.onChangeSelectedYear(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={yearChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\n\nconst ChartBar = (props) => {\n\n    let fillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        fillHeight = `${Math.round((props.value/props.maxValue)*100)}%`\n    }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{height: fillHeight}}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataValues = props.data.map((element) => element.value);\n  const totalMax = Math.max(...dataValues);\n  \n  return (\n    <div className=\"chart\">\n      {props.data.map((element) => (\n        <ChartBar\n          key={element.label}\n          value={element.value}\n          maxValue={totalMax}\n          label={element.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../chart/Chart\";\n\nconst ChartData = (props) => {\n  const dataForChart = [\n    {\n      label: \"Jan\",\n      value: 0,\n    },\n    {\n      label: \"Feb\",\n      value: 0,\n    },\n    {\n      label: \"Mar\",\n      value: 0,\n    },\n    {\n      label: \"Apr\",\n      value: 0,\n    },\n    {\n      label: \"May\",\n      value: 0,\n    },\n    {\n      label: \"Jun\",\n      value: 0,\n    },\n    {\n      label: \"July\",\n      value: 0,\n    },\n    {\n      label: \"Aug\",\n      value: 0,\n    },\n    {\n      label: \"Sep\",\n      value: 0,\n    },\n    {\n      label: \"Oct\",\n      value: 0,\n    },\n    {\n      label: \"Nov\",\n      value: 0,\n    },\n    {\n      label: \"Dec\",\n      value: 0,\n    },\n  ];\n\n  for (const expense of props.filteredItems) {\n    const expenseMonth = expense.date.getMonth();\n    dataForChart[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart data={dataForChart} />;\n};\n\nexport default ChartData;\n","import React, { useState } from \"react\";\n\nimport \"./Expenses.css\";\nimport ExpensesContentList from \"./ExpensesContentList\";\nimport ExpenseCard from \"../UI/ExpenseCard\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ChartData from \"./ChartData\";\n\nconst Expenses = ({ items }) => {\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n\n  const changeSelectedYearHandler = (selectedYearFromFilter) => {\n    console.log(`expenses: ${selectedYearFromFilter}`);\n    setSelectedYear(selectedYearFromFilter);\n  };\n\n  const filteredExpenses = items.filter((element) => {\n    return element.date.getFullYear().toString() === selectedYear;\n  });\n\n  return (\n    <div>\n      <ExpenseCard className=\"expenses\">\n        <ChartData filteredItems={filteredExpenses} />\n        <ExpensesFilter\n          selected={selectedYear}\n          onChangeSelectedYear={changeSelectedYearHandler}\n        />\n        <ExpensesContentList filteredItems={filteredExpenses} />\n      </ExpenseCard>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [selectedTitle, setSelectedTitle] = useState(\"\");\n  const [selectedAmount, setSelectedAmount] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n\n  const changeTitleHandler = (event) => {\n    setSelectedTitle(event.target.value);\n  };\n  const changeAmountHandler = (event) => {\n    setSelectedAmount(event.target.value);\n  };\n  const changeDateHandler = (event) => {\n    setSelectedDate(event.target.value);\n  };\n  const addFormHandler = (event) => {\n    event.preventDefault();\n    const expenseDataFromForm = {\n      title: selectedTitle,\n      amount: +selectedAmount,\n      date: new Date(selectedDate),\n    };\n    props.onSaveExpenseData(expenseDataFromForm); // wywoładnie dla rodzica\n    setSelectedTitle(\"\");\n    setSelectedAmount(\"\");\n    setSelectedDate(\"\");\n  };\n\n  return (\n    <form action=\"\" onSubmit={addFormHandler}>\n      <section className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Title</label>\n          <input\n            type=\"text\"\n            value={selectedTitle}\n            onChange={changeTitleHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={selectedAmount}\n            onChange={changeAmountHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={selectedDate}\n            onChange={changeDateHandler}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"subbmit\">Add new Expence</button>\n          <button type=\"button\" onClick={props.onHideFormHandler}>\n            Cancel\n          </button>\n        </div>\n      </section>\n    </form>\n  );\n};\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const [btnClick, setBtnClick] = useState(false);\n\n  const saveExpenseDataHandler = (CopyExpenseDataFromForm) => {\n    const expenseDataFromNewExpense = {\n      ...CopyExpenseDataFromForm,\n      id: Math.random().toString(),\n    };\n    props.onAddExpenseData(expenseDataFromNewExpense);\n    setBtnClick(false);\n  };\n\n  const showFormHandler = () => {\n    setBtnClick(true);\n  };\n\n  const hideFormHandler = () => {\n     setBtnClick(false);\n  };\n\n  if (btnClick) {\n    return (\n      <div className=\"new-expense\">\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onHideFormHandler = {hideFormHandler}/>\n      </div>\n    );\n  }\n  return (\n    <div className=\"new-expense\">\n      <button onClick={showFormHandler}>Add new expense</button>\n    </div>\n  );\n};\n\nexport default NewExpense;\n\n  /*\nconst showFormHandler = () => {\n    setFormContent(\n      <div>\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onHideFormHandler={hideFormHandler}\n        />\n      </div>\n    );\n  };\n\n  const hideFormHandler = () => {\n    setFormContent(<button onClick={showFormHandler}>Add new Expence</button>);\n  };\n\n  let form = <button onClick={showFormHandler}>Add new Expence</button>;\n  const [formContent, setFormContent] = useState(form);\n\n  return <div className=\"new-expense\">{formContent}</div>;\n};\n  */","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { exampleList } from \"./Components/Expenses/ExampleList\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\n\nfunction App() {\n  const [expensesList, setExpenceList] = useState(exampleList);\n\n  const addExpenseDataHandler = (expenseDataFromNewExpense) => {\n    console.log(expenseDataFromNewExpense);\n    setExpenceList((previousExpense) => {\n      return [expenseDataFromNewExpense, ...previousExpense];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Expense Manager</h1>\n      <NewExpense onAddExpenseData={addExpenseDataHandler} />\n      <Expenses items={expensesList} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}