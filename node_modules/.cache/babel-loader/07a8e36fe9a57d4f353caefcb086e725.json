{"ast":null,"code":"var _jsxFileName = \"/Users/marcinkowalczyk/Documents/workspace_vsc/REACT/expenses-app/Expenses-App-React/src/Components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpenseCard from \"../UI/ExpenseCard\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = ({\n  items\n}) => {\n  _s();\n\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n\n  const changeSelectedYearHandler = selectedYearFromFilter => {\n    console.log(`expenses: ${selectedYearFromFilter}`);\n    setSelectedYear(selectedYearFromFilter);\n  };\n\n  const filteredExpenses = items.filter(element => {\n    return element.date.getFullYear().toString() === selectedYear;\n  }); // condition for empty list of expenses\n\n  let expenceContent;\n  filteredExpenses.length > 0 ? expenceContent = filteredExpenses.map(element => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n    title: element.title,\n    date: element.date,\n    amount: element.amount\n  }, element.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this)) : expenceContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses for this year\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ExpenseCard, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: selectedYear,\n        onChangeSelectedYear: changeSelectedYearHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), expenceContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"3JyZSyd4/ouL28saHC4gke+LBKI=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/marcinkowalczyk/Documents/workspace_vsc/REACT/expenses-app/Expenses-App-React/src/Components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpenseCard","ExpensesFilter","Expenses","items","selectedYear","setSelectedYear","changeSelectedYearHandler","selectedYearFromFilter","console","log","filteredExpenses","filter","element","date","getFullYear","toString","expenceContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,yBAAyB,GAAIC,sBAAD,IAA4B;AAC5DC,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYF,sBAAuB,EAAhD;AACAF,IAAAA,eAAe,CAACE,sBAAD,CAAf;AACD,GAHD;;AAKA,QAAMG,gBAAgB,GAAGP,KAAK,CAACQ,MAAN,CAAcC,OAAD,IAAa;AACjD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CX,YAAjD;AACD,GAFwB,CAAzB,CAR8B,CAY9B;;AACA,MAAIY,cAAJ;AACAN,EAAAA,gBAAgB,CAACO,MAAjB,GAA0B,CAA1B,GACKD,cAAc,GAAGN,gBAAgB,CAACQ,GAAjB,CAAsBN,OAAD,iBACrC,QAAC,WAAD;AAEE,IAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,IAAA,IAAI,EAAEP,OAAO,CAACC,IAHhB;AAIE,IAAA,MAAM,EAAED,OAAO,CAACQ;AAJlB,KACOR,OAAO,CAACS,EADf;AAAA;AAAA;AAAA;AAAA,UADgB,CADtB,GASKL,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATtB;AAWA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEZ,YADZ;AAEE,QAAA,oBAAoB,EAAEE;AAFxB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGU,cALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApCD;;GAAMd,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpenseCard from \"../UI/ExpenseCard\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nconst Expenses = ({ items }) => {\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n\n  const changeSelectedYearHandler = (selectedYearFromFilter) => {\n    console.log(`expenses: ${selectedYearFromFilter}`);\n    setSelectedYear(selectedYearFromFilter);\n  };\n\n  const filteredExpenses = items.filter((element) => {\n    return element.date.getFullYear().toString() === selectedYear;\n  });\n\n  // condition for empty list of expenses\n  let expenceContent;\n  filteredExpenses.length > 0\n    ? (expenceContent = filteredExpenses.map((element) => (\n        <ExpenseItem\n          key={element.id}\n          title={element.title}\n          date={element.date}\n          amount={element.amount}\n        />\n      )))\n    : (expenceContent = <p>No expenses for this year</p>);\n\n  return (\n    <div>\n      <ExpenseCard className=\"expenses\">\n        <ExpensesFilter\n          selected={selectedYear}\n          onChangeSelectedYear={changeSelectedYearHandler}\n        />\n        {expenceContent}\n      </ExpenseCard>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}