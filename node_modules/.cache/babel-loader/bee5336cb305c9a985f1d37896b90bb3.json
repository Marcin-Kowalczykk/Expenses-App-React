{"ast":null,"code":"var _jsxFileName = \"/Users/marcinkowalczyk/Documents/workspace_vsc/REACT/expenses-app/Expenses-App-React/src/Components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const saveExpenseDataHandler = CopyExpenseDataFromForm => {\n    const expenseDataFromNewExpense = { ...CopyExpenseDataFromForm,\n      id: Math.random().toString()\n    };\n    props.onAddExpenseData(expenseDataFromNewExpense);\n  };\n\n  const showFormHandler = () => {\n    setFormContent( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ExpenseForm, {\n        onSaveExpenseData: saveExpenseDataHandler,\n        onHideFormHandler: hideFormHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this));\n  };\n\n  const hideFormHandler = () => {\n    setFormContent( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showFormHandler,\n      children: \"Add new Expence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 20\n    }, this));\n  };\n\n  let form = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: showFormHandler,\n    children: \"Add new Expence\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 14\n  }, this);\n\n  const [formContent, setFormContent] = useState(form);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: formContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(NewExpense, \"2uFgr/QWgQTvKKH/V9PGGa9CoVU=\");\n\n_c = NewExpense;\nexport default NewExpense; // const [btnClick, setBtnClick] = useState(false);\n\n/*\n  const showFormHandler = () => {\n    setBtnClick(true);\n  };\n\n  const hideFormHandler = () => {\n     setBtnClick(false);\n  };\n\n  if (btnClick) {\n    return (\n      <div className=\"new-expense\">\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onHideFormHandler = {hideFormHandler}/>\n      </div>\n    );\n  }\n  return (\n    <div className=\"new-expense\">\n      <button onClick={showFormHandler}>Add new expense</button>\n    </div>\n  );\n  */\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/Users/marcinkowalczyk/Documents/workspace_vsc/REACT/expenses-app/Expenses-App-React/src/Components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","saveExpenseDataHandler","CopyExpenseDataFromForm","expenseDataFromNewExpense","id","Math","random","toString","onAddExpenseData","showFormHandler","setFormContent","hideFormHandler","form","formContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,sBAAsB,GAAIC,uBAAD,IAA6B;AAC1D,UAAMC,yBAAyB,GAAG,EAChC,GAAGD,uBAD6B;AAEhCE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAF4B,KAAlC;AAIAP,IAAAA,KAAK,CAACQ,gBAAN,CAAuBL,yBAAvB;AACD,GAND;;AAQA,QAAMM,eAAe,GAAG,MAAM;AAC5BC,IAAAA,cAAc,eACZ;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,iBAAiB,EAAET,sBADrB;AAEE,QAAA,iBAAiB,EAAEU;AAFrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADY,CAAd;AAQD,GATD;;AAWA,QAAMA,eAAe,GAAG,MAAM;AAC5BD,IAAAA,cAAc,eAAC;AAAQ,MAAA,OAAO,EAAED,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAD,CAAd;AACD,GAFD;;AAIA,MAAIG,IAAI,gBAAG;AAAQ,IAAA,OAAO,EAAEH,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;;AACA,QAAM,CAACI,WAAD,EAAcH,cAAd,IAAgCb,QAAQ,CAACe,IAAD,CAA9C;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5BD;;GAAMd,U;;KAAAA,U;AA8BN,eAAeA,UAAf,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (CopyExpenseDataFromForm) => {\n    const expenseDataFromNewExpense = {\n      ...CopyExpenseDataFromForm,\n      id: Math.random().toString(),\n    };\n    props.onAddExpenseData(expenseDataFromNewExpense);\n  };\n\n  const showFormHandler = () => {\n    setFormContent(\n      <div>\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onHideFormHandler={hideFormHandler}\n        />\n      </div>\n    );\n  };\n\n  const hideFormHandler = () => {\n    setFormContent(<button onClick={showFormHandler}>Add new Expence</button>);\n  };\n\n  let form = <button onClick={showFormHandler}>Add new Expence</button>;\n  const [formContent, setFormContent] = useState(form);\n\n  return <div className=\"new-expense\">{formContent}</div>;\n};\n\nexport default NewExpense;\n\n// const [btnClick, setBtnClick] = useState(false);\n\n/*\n  const showFormHandler = () => {\n    setBtnClick(true);\n  };\n\n  const hideFormHandler = () => {\n     setBtnClick(false);\n  };\n\n  if (btnClick) {\n    return (\n      <div className=\"new-expense\">\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onHideFormHandler = {hideFormHandler}/>\n      </div>\n    );\n  }\n  return (\n    <div className=\"new-expense\">\n      <button onClick={showFormHandler}>Add new expense</button>\n    </div>\n  );\n  */\n"]},"metadata":{},"sourceType":"module"}